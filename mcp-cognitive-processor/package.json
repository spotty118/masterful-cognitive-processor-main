{
  "name": "mcp-cognitive-processor",
  "version": "1.0.0",
  "type": "module",
  "main": "build/index.js",
  "types": "build/index.d.ts",
  "exports": {
    ".": {
      "import": "./build/index.js",
      "types": "./build/index.d.ts"
    }
  },
  "scripts": {
    "build": "tsc",
    "start": "node build/index.js",
    "test": "jest",
    "test:pipeline": "node --experimental-specifier-resolution=node --loader ts-node/esm src/test/test-pipeline.ts",
    "test:simple-pipeline": "node --experimental-specifier-resolution=node --loader ts-node/esm src/test/simple-pipeline-test.ts",
    "test:debug-services": "node --experimental-specifier-resolution=node --loader ts-node/esm src/test/debug-services.ts",
    "test:deepseek": "node --experimental-specifier-resolution=node --loader ts-node/esm src/test/test-deepseek-only.ts",
    "test:metrics": "node --experimental-specifier-resolution=node --loader ts-node/esm src/test/test-thinking-metrics.ts",
    "test:engine": "node --experimental-specifier-resolution=node --loader ts-node/esm src/test/test-thinking-engine.ts",
    "test:engine-metrics": "node --experimental-specifier-resolution=node --loader ts-node/esm src/test/test-engine-metrics.ts",
    "test:metrics-standalone": "node --experimental-specifier-resolution=node --loader ts-node/esm src/test/test-metrics-standalone.ts",
    "test:pipeline-minimal": "node --experimental-specifier-resolution=node --loader ts-node/esm src/test/test-pipeline-minimal.ts",
    "test:token-pipeline": "node --experimental-specifier-resolution=node --loader ts-node/esm src/test/test-token-pipeline.ts"
  },
  "dependencies": {
    "@modelcontextprotocol/sdk": "^0.1.0",
    "node-fetch": "^3.3.0",
    "@types/node-fetch": "^2.6.9",
    "openai": "^4.28.0",
    "uuid": "^9.0.0",
    "events": "^3.3.0"
  },
  "devDependencies": {
    "@types/jest": "^29.5.0",
    "@types/node": "^18.11.18",
    "@types/uuid": "^9.0.0",
    "jest": "^29.5.0",
    "ts-jest": "^29.1.0",
    "typescript": "^4.9.5"
  },
  "engines": {
    "node": ">=16.0.0"
  }
}
